name: Terraform CI/CD

on:
  push:
    branches:
      - main # Lub Twoja domyślna gałąź
      - task_1 # Dodane: uruchamiaj także na push do task_1 (check i plan)
  pull_request:
    branches:
      - main # Lub Twoja domyślna gałąź

permissions:
  id-token: write # Wymagane do uwierzytelniania OIDC z AWS
  contents: read  # Wymagane do pobrania kodu repozytorium
  pull-requests: write # Opcjonalne: jeśli chcesz dodawać komentarze z planem do PR

jobs:
  terraform-check:
    name: 'Terraform Format Check'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        # Możesz dodać konkretną wersję Terraform, jeśli jest to wymagane:
        # with:
        #   terraform_version: '1.6.x'

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: terraform-check
    env:
      AWS_REGION: "eu-west-1" # Zgodnie z Twoim plikiem variables.tf
      # Pamiętaj o ustawieniu sekretu AWS_ACCOUNT_ID w ustawieniach repozytorium GitHub
      # oraz upewnij się, że nazwa roli jest zgodna z tą w iam.tf (var.github_actions_role_name)
      TF_ROLE_TO_ASSUME: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.TF_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color
        # Aby zapisać plan do pliku (do późniejszego użycia w apply lub jako artefakt):
        # run: terraform plan -out=tfplan -no-color
        # - name: Upload Terraform Plan
        #   uses: actions/upload-artifact@v3
        #   with:
        #     name: tfplan
        #     path: tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-plan
    # Uruchamiaj tylko na push do gałęzi 'main' (lub Twojej domyślnej)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      AWS_REGION: "eu-west-1"
      TF_ROLE_TO_ASSUME: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.TF_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color
        # Jeśli zapisałeś plan w poprzednim jobie:
        # - name: Download Terraform Plan
        #   uses: actions/download-artifact@v3
        #   with:
        #     name: tfplan
        # - name: Terraform Apply
        #   run: terraform apply -auto-approve -no-color tfplan